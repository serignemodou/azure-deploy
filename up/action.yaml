name: 'Up'
description: 'Pulumi UP'

inputs:
  stack-name: 
    description: 'STACK NAME'
    required: true
  pulumi-access-token:
    description: "PULUMI_ACCESS_TOKEN"
    required: true
  az-client-id:
    description: 'AZ_CLIENT_ID'
    required: true
  az-client-secret:
    description: 'AZ_CLIENT_SECRET'
    required: true
  az-tenant-id:
    description: 'AZ_TENANT_ID'
    required: false
  az-subscription-id:
    description: 'AZ_SUBSCRIBTION_ID'
    required: false
  stack-backup-encryptionkey:
    description: 'STACK_BACKUP_ENCRYPTION_KEY_VAULT'
    required: false
  az-storage-account-name: 
    description: 'AZ_STORAGE_ACCOUNT_NAME'
    required: false
  az-blob-container-name:
    description: 'AZ_BLOB_CONTAINER_NAME'
    required: false


runs:
  using: composite
  steps:
    # Install prerequiste 
    - name: Git checkout
      uses: actions/checkout@v3
    - name: Setup node
      uses: actions/setup-node@v2
      with:
        node-version: 14
    - name: Install pulumi CLI
      uses: pulumi/setup-pulumi@v2
    - name: Install Dependencies
      shell: bash
      run: yarn install

    #Az Login step
    - id: az_login
      uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ inputs.az-client-id }}, "clientSecret":"${{ inputs.az-client-secret }}", "subscriptionId":"${{ inputs.az-subscription-id }}","tenantID":"${{ inputs.az-tenant-id }}" }'
    
    #Pulumi up step
    - name: Pulumi up
      uses: pulumi/actions@v3.18.1 #Run pulumi login in same time when using default backend (pulumi cloud) but not for custom backend (S3, Blob ...)
      with:
        command: up
        stack-name: beapp/${{ inputs.stack-name }}
      env:
        PULUMI_ACCESS_TOKEN: ${{ inputs.pulumi-access-token }}
        AZ_CLIENT_ID: ${{ inputs.az-client-id }}
        AZ_CLIENT_SECRET : ${{ inputs.az-client-secret }}
        AZ_TENANT_ID: ${{ inputs.az-tenant-id }}
        AZ_SUBSCRIPTION_ID: ${{ inputs.az-subscription-id }}

    #Save stack to azure blob
    - name: Export stack
      if: ${{ inputs.stack-backup-encryptionkey != 0 }}
      shell: bash
      run: |
          date=`date +%Y%m%d%H%M%S`
          echo "Step1: Change secret provider to azure key vault"
          pulumi stack change-secrets-provider ${{ inputs.stack-backup-encryptionkey }} --stack beapp/${{ inputs.stack-name }}
          echo "Step2: Export the stack with azure keyvault secret provider"
          pulumi stack export --stack beapp/${{ inputs.stack-name }} > ${{ inputs.stack-name }}.$data.azkv.stack.provider.json
          echo "Step3: Copy yaml with azurekeyvault encryption provider"
          cp -p Pulumi.${{ inputs.stack-name }}.yaml ${{ inputs.stack-name }}.$date.azkv.Pulumi.${{ inputs.stack-name }}.yaml
          echo "Step5: Set back pulumi encryption provider"
          pulumi stack change-secrets-provider default --stack beapp/${{ inputs.stack-name }}

    # Push stack backup to azure blob storage
    - name: push backup file to Azure Blob storage
      if: ${{ inputs.az-storage-account-name != 0 && inputs.az-blob-container-name != 0 }}
      shell: bash
      run: | 
          echo "Step4: Export stack json to azure blob storage"
          az storage blob upload --account-name ${{ inputs.az-storage-account-name }} --container-name ${{ inputs.az-blob-container-name }} --name ${{ inputs.stack-name }}.$data.azkv.stack.provider.json --file ${{ inputs.stack-name }}.$data.azkv.stack.provider.json --auth-mode